buildCmd: sh ./gradlew assemble
testCmd: true
lineLength: 4096
skipVerification: true
cbmcArguments:
  # Do not generate coverage comments on generated tests.
  java-generate-no-comments: true
phases:
  -
  #Phase 0 PRETTY AND SIMPLE - Simple models, quick cover, pretty Tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # Instrument the file as opposed to the function only
      cover-only: file
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 1 PRETTY AND COMPLEX - Standard models, longer run time, pretty tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 2
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
  -
  #Phase 2 Simple and Private Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # If the logs contain output of the following then proceed to phase X
    nextPhase:
      # If the function is not analysable then do not pass onto the next phase
      not_analyzed: null
  -
  #Phase 3 Complex and Private Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 3000
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 3
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 4 EXCEPTIONS
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
  -
    #PHASE 5 Big numbers and less contraints on inputs 
    timeout: 300
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 100
      # Bound the length of input strings.
      max-nondet-string-length: 100
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 6
units:
# Target TGF: 3650.25
#  >methods=16
#  >complexity=547
#  >construction=74.25
#  >dependency=7.83333333333
 - target:
   - dir: build/classes/java/main
     file: console/common/ConsoleUtils.class
     sourceDir: src/main/java
     sourceFile: console/common/ConsoleUtils.java
   - dir: build/classes/java/main
     file: console/exception/CompileSolidityException.class
     sourceDir: src/main/java
     sourceFile: console/exception/CompileSolidityException.java
   - dir: build/classes/java/main
     file: console/common/ConsoleUtils$CommandTokenizer.class
     sourceDir: src/main/java
     sourceFile: console/common/ConsoleUtils.java
   - dir: build/classes/java/main
     file: console/common/Address.class
     sourceDir: src/main/java
     sourceFile: console/common/Address.java
# Target TGF: 4080.75
#  >methods=7
#  >complexity=945
#  >construction=54.0
#  >dependency=3.41666666667
 - target:
   - dir: build/classes/java/main
     file: console/common/ContractClassFactory.class
     sourceDir: src/main/java
     sourceFile: console/common/ContractClassFactory.java
   - dir: build/classes/java/main
     file: console/common/ContractClassFactory$1.class
     sourceDir: src/main/java
     sourceFile: console/common/ContractClassFactory.java
# Target TGF: 307.928571429
#  >methods=3
#  >complexity=479
#  >construction=9.0
#  >dependency=0.0714285714286
 - target:
   - dir: build/classes/java/main
     file: console/ConsoleClient.class
     sourceDir: src/main/java
     sourceFile: console/ConsoleClient.java
   - dir: build/classes/java/main
     file: console/StringsCompleterIgnoreCase.class
     sourceDir: src/main/java
     sourceFile: console/ConsoleClient.java
   - dir: build/classes/java/main
     file: console/common/HelpInfo.class
     sourceDir: src/main/java
     sourceFile: console/common/HelpInfo.java
   - dir: build/classes/java/main
     file: console/common/ConsoleUtils.class
     sourceDir: src/main/java
     sourceFile: console/common/ConsoleUtils.java
   - dir: build/classes/java/main
     file: console/ConsoleFace.class
     sourceDir: src/main/java
     sourceFile: console/ConsoleFace.java
   - dir: build/classes/java/main
     file: console/ConsoleImpl.class
     sourceDir: src/main/java
     sourceFile: console/ConsoleImpl.java
# Target TGF: 4.03571428571
#  >methods=5
#  >complexity=113
#  >construction=0.142857142857
#  >dependency=0.25
 - target:
   - dir: build/classes/java/main
     file: console/StringsCompleterIgnoreCase.class
     sourceDir: src/main/java
     sourceFile: console/ConsoleClient.java
# Target TGF: 18.0
#  >methods=7
#  >complexity=18
#  >construction=1.0
#  >dependency=1.0
 - target:
   - dir: build/classes/java/main
     file: console/common/Address.class
     sourceDir: src/main/java
     sourceFile: console/common/Address.java
# Target TGF: 6714.0
#  >methods=59
#  >complexity=746
#  >construction=522.0
#  >dependency=58.0
 - target:
   - dir: build/classes/java/main
     file: console/common/HelpInfo.class
     sourceDir: src/main/java
     sourceFile: console/common/HelpInfo.java
# Target TGF: 24.0
#  >methods=2
#  >complexity=24
#  >construction=1.0
#  >dependency=1.0
 - target:
   - dir: build/classes/java/main
     file: console/common/ContractClassFactory$1.class
     sourceDir: src/main/java
     sourceFile: console/common/ContractClassFactory.java
   - dir: build/classes/java/main
     file: console/common/ContractClassFactory.class
     sourceDir: src/main/java
     sourceFile: console/common/ContractClassFactory.java
# Target TGF: 0
#  >methods=1
#  >complexity=0
#  >construction=0
#  >dependency=0
 - target:
   - dir: build/classes/java/main
     file: console/common/Common.class
     sourceDir: src/main/java
     sourceFile: console/common/Common.java
# Target TGF: 3004.42857143
#  >methods=64
#  >complexity=5180
#  >construction=65.0
#  >dependency=21.6095238095
 - target:
   - dir: build/classes/java/main
     file: console/ConsoleImpl.class
     sourceDir: src/main/java
     sourceFile: console/ConsoleImpl.java
   - dir: build/classes/java/main
     file: console/common/ContractClassFactory.class
     sourceDir: src/main/java
     sourceFile: console/common/ContractClassFactory.java
   - dir: build/classes/java/main
     file: console/exception/ConsoleMessageException.class
     sourceDir: src/main/java
     sourceFile: console/exception/ConsoleMessageException.java
   - dir: build/classes/java/main
     file: console/common/Address.class
     sourceDir: src/main/java
     sourceFile: console/common/Address.java
   - dir: build/classes/java/main
     file: console/common/HelpInfo.class
     sourceDir: src/main/java
     sourceFile: console/common/HelpInfo.java
   - dir: build/classes/java/main
     file: console/common/ConsoleUtils.class
     sourceDir: src/main/java
     sourceFile: console/common/ConsoleUtils.java
   - dir: build/classes/java/main
     file: console/ConsoleFace.class
     sourceDir: src/main/java
     sourceFile: console/ConsoleFace.java
# Target TGF: 0
#  >methods=4
#  >complexity=0
#  >construction=0
#  >dependency=0
 - target:
   - dir: build/classes/java/main
     file: console/exception/ConsoleMessageException.class
     sourceDir: src/main/java
     sourceFile: console/exception/ConsoleMessageException.java
